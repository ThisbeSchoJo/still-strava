"""add password_hash to user model

Revision ID: e29f1a9d2d84
Revises: 5474d8e58976
Create Date: 2025-06-20 14:56:15.226875

"""
from alembic import op
import sqlalchemy as sa
import bcrypt


# revision identifiers, used by Alembic.
revision = 'e29f1a9d2d84'
down_revision = '5474d8e58976'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # First add the column as nullable
        batch_op.add_column(sa.Column('password_hash', sa.String(), nullable=True))
    
    # Update existing users with a default password hash
    connection = op.get_bind()
    default_password_hash = bcrypt.hashpw('defaultpassword123'.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')
    connection.execute(sa.text("UPDATE users SET password_hash = :password_hash"), 
                      {"password_hash": default_password_hash})
    
    # Now make the column not nullable
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password_hash', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('password_hash')

    # ### end Alembic commands ###
